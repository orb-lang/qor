return {
  {
    {
      line = "breakascii = require \"core:string/print\" . breakascii",
      ordinal = 1,
      results = {
        n = 0
      },
      status = "ignore",
      time = "2021-01-13T19:50:25.020",
      title = ""
    },
    {
      line = "breakascii(\"abc def ghi jkl\", 11)",
      ordinal = 2,
      results = {
        n = 3,
        repr = {
          "\1sw\2abc def ghi\\njkl",
          "\1n\0022",
          "\1n\00211"
        }
      },
      status = "accept",
      time = "2021-01-13T19:50:46.711",
      title = "Exact fit after removing trailing whitespace"
    },
    {
      line = "breakascii(\"abc defghi jkl\", 11)",
      ordinal = 3,
      results = {
        n = 3,
        repr = {
          "\1sw\2abc defghi\\njkl",
          "\1n\0022",
          "\1n\00210"
        }
      },
      status = "accept",
      time = "2021-01-13T19:52:51.687",
      title = "One short after removing trailing whitespace"
    },
    {
      line = "breakascii(\"abc defghi-jkl\", 11)",
      ordinal = 4,
      results = {
        n = 3,
        repr = {
          "\1sw\2abc defghi-\\njkl",
          "\1n\0022",
          "\1n\00211"
        }
      },
      status = "accept",
      time = "2021-01-13T19:52:55.159",
      title = "Exact fit because separator is not whitespace"
    },
    {
      line = "breakascii(\"abcde ghijkl\", 11)",
      ordinal = 5,
      results = {
        n = 3,
        repr = {
          "\1sw\2abcde\\nghijkl",
          "\1n\0022",
          "\1n\0026"
        }
      },
      status = "accept",
      time = "2021-01-13T19:53:23.359",
      title = "Split at minimum length"
    },
    {
      line = "breakascii(\"abcd efghijkl\", 11)",
      ordinal = 6,
      results = {
        n = 3,
        repr = {
          "\1sw\2abcd efghij\\nkl",
          "\1n\0022",
          "\1n\00211"
        }
      },
      status = "accept",
      time = "2021-01-13T19:53:38.030",
      title = "Available split point is too early, chop in middle of word"
    },
    {
      line = "breakascii(\"abcd-efghijkl\", 11)",
      ordinal = 7,
      results = {
        n = 3,
        repr = {
          "\1sw\2abcd-\\nefghijkl",
          "\1n\0022",
          "\1n\0028"
        }
      },
      status = "accept",
      time = "2021-01-13T19:54:29.190",
      title = "Separator counts so this is no longer too early"
    },
    {
      line = "breakascii(\"abc-defghijkl\", 11)",
      ordinal = 8,
      results = {
        n = 3,
        repr = {
          "\1sw\2abc-defghij\\nkl",
          "\1n\0022",
          "\1n\00211"
        }
      },
      status = "accept",
      time = "2021-01-13T19:54:43.134",
      title = "But this again is"
    },
    {
      line = "breakascii(\"abcdefghijk\", 11)",
      ordinal = 9,
      results = {
        n = 3,
        repr = {
          "\1sw\2abcdefghijk",
          "\1n\0021",
          "\1n\00211"
        }
      },
      status = "accept",
      time = "2021-01-13T19:55:22.486",
      title = "Exact fit with no separators"
    },
    {
      line = "breakascii(\"abcdefghijkl\", 11)",
      ordinal = 10,
      results = {
        n = 3,
        repr = {
          "\1sw\2abcdefghijk\\nl",
          "\1n\0022",
          "\1n\00211"
        }
      },
      status = "accept",
      time = "2021-01-13T19:55:24.893",
      title = "Overshot by one, have to just chop"
    },
    accepted = true,
    session_title = "breakascii-edgecases"
  },
  bundle_type = "session",
  project = "core",
  version = 1
}